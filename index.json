{
  "api/CG.Olive.Models.Application.html": {
    "href": "api/CG.Olive.Models.Application.html",
    "title": "Class Application",
    "keywords": "Class Application This class is a model that represents a configuration application. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Business.Models.ModelBase Application Implements System.ComponentModel.DataAnnotations.IValidatableObject CG.Business.Models.IModel Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : CG.Olive.Models Assembly : CG.Olive.Abstractions.dll Syntax public class Application : ModelBase, IValidatableObject, IModel Constructors Application() This constructor creates a new instance of the Application class. Declaration public Application() Properties CreatedBy This property contains the name of the user who created the application. Declaration public string CreatedBy { get; set; } Property Value Type Description System.String CreatedDate This property contains the date when the application was created. Declaration public DateTime CreatedDate { get; set; } Property Value Type Description System.DateTime Id This property contains a unique identifier for the application. Declaration public int Id { get; set; } Property Value Type Description System.Int32 IsLocked This property indicates whether the application is locked, or not. Declaration public bool IsLocked { get; set; } Property Value Type Description System.Boolean Name This property contains the name for the application. Declaration [Required] public string Name { get; set; } Property Value Type Description System.String Sid This property contains the security identifier for the application. Declaration [Required] public string Sid { get; set; } Property Value Type Description System.String SKey This property contains the security key for the application. Declaration [Required] public string SKey { get; set; } Property Value Type Description System.String UpdatedBy This property contains the name of the user who last application the upload. Declaration public string UpdatedBy { get; set; } Property Value Type Description System.String UpdatedDate This property contains the date when the application was last modified. Declaration public DateTime? UpdatedDate { get; set; } Property Value Type Description System.Nullable < System.DateTime > Methods Equals(Object) This method is overriden in order to determine equality. Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj The model to compare with. Returns Type Description System.Boolean True if the objects are equal; false otherwise. Overrides System.Object.Equals(System.Object) GetHashCode() This method returns a hashcode for the object. Declaration public override int GetHashCode() Returns Type Description System.Int32 A hashcode for the object. Overrides System.Object.GetHashCode() ToString() This method returns a string that represents the current model. Declaration public override string ToString() Returns Type Description System.String A string that represents the current object. Overrides System.Object.ToString() Implements System.ComponentModel.DataAnnotations.IValidatableObject CG.Business.Models.IModel"
  },
  "api/CG.Olive.Models.Environment.html": {
    "href": "api/CG.Olive.Models.Environment.html",
    "title": "Class Environment",
    "keywords": "Class Environment This class is a model that represents a configuration environment. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Business.Models.ModelBase Environment Implements System.ComponentModel.DataAnnotations.IValidatableObject CG.Business.Models.IModel Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : CG.Olive.Models Assembly : CG.Olive.Abstractions.dll Syntax public class Environment : ModelBase, IValidatableObject, IModel Properties CreatedBy This property contains the name of the user who created the environment. Declaration public string CreatedBy { get; set; } Property Value Type Description System.String CreatedDate This property contains the date when the environment was created. Declaration public DateTime CreatedDate { get; set; } Property Value Type Description System.DateTime Id This property contains a unique identifier for the environment. Declaration public int Id { get; set; } Property Value Type Description System.Int32 IsDefault This property indicates whether this environment is the default one. Declaration public bool IsDefault { get; set; } Property Value Type Description System.Boolean Name This property contains the name for the environment. Declaration [Required] public string Name { get; set; } Property Value Type Description System.String UpdatedBy This property contains the name of the user who last environment the upload. Declaration public string UpdatedBy { get; set; } Property Value Type Description System.String UpdatedDate This property contains the date when the environment was last modified. Declaration public DateTime? UpdatedDate { get; set; } Property Value Type Description System.Nullable < System.DateTime > Methods Equals(Object) This method is overriden in order to determine equality. Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj The model to compare with. Returns Type Description System.Boolean True if the objects are equal; false otherwise. Overrides System.Object.Equals(System.Object) GetHashCode() This method returns a hashcode for the object. Declaration public override int GetHashCode() Returns Type Description System.Int32 A hashcode for the object. Overrides System.Object.GetHashCode() ToString() This method returns a string that represents the current model. Declaration public override string ToString() Returns Type Description System.String A string that represents the current object. Overrides System.Object.ToString() Implements System.ComponentModel.DataAnnotations.IValidatableObject CG.Business.Models.IModel"
  },
  "api/CG.Olive.Models.GuardExtensions.html": {
    "href": "api/CG.Olive.Models.GuardExtensions.html",
    "title": "Class GuardExtensions",
    "keywords": "Class GuardExtensions This class contains extension methods related to the CG.Validations.IGuard type. Inheritance System.Object GuardExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.Models Assembly : CG.Olive.dll Syntax public static class GuardExtensions Remarks This class contains validation methods specific to the CG.Olive library. Methods ThrowIfDuplicate(IGuard, Upload, String, IUploadStore, String, String, Int32) This method throws an exception if the argValue argument contains an upload that, if processed, would create a duplicate. Declaration public static IGuard ThrowIfDuplicate(this IGuard guard, Upload argValue, string argName, IUploadStore uploadStore, string memberName = \"\", string sourceFilePath = \"\", int sourceLineNumber = 0) Parameters Type Name Description CG.Validations.IGuard guard The guard instance to use for the operation. Upload argValue The argument to test. System.String argName The argument name. IUploadStore uploadStore The upload store to use for the operation. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. Returns Type Description CG.Validations.IGuard The guard argument. Exceptions Type Condition System.ArgumentException This exception is thrown when the argValue argument contains a potentially duplicate upload. ThrowIfNotInAddableState(IGuard, Application, String, String, String, Int32) This method throws an exception if the argValue argument contains an application that is not in an addable state. Declaration public static IGuard ThrowIfNotInAddableState(this IGuard guard, Application argValue, string argName, string memberName = \"\", string sourceFilePath = \"\", int sourceLineNumber = 0) Parameters Type Name Description CG.Validations.IGuard guard The guard instance to use for the operation. Application argValue The argument to test. System.String argName The argument name. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. Returns Type Description CG.Validations.IGuard The guard argument. Exceptions Type Condition System.ArgumentException This exception is thrown when the argValue argument contains an application that is not in an addable state. ThrowIfNotInAddableState(IGuard, Environment, String, String, String, Int32) This method throws an exception if the argValue argument contains an environment that is not in an addable state. Declaration public static IGuard ThrowIfNotInAddableState(this IGuard guard, Environment argValue, string argName, string memberName = \"\", string sourceFilePath = \"\", int sourceLineNumber = 0) Parameters Type Name Description CG.Validations.IGuard guard The guard instance to use for the operation. Environment argValue The argument to test. System.String argName The argument name. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. Returns Type Description CG.Validations.IGuard The guard argument. Exceptions Type Condition System.ArgumentException This exception is thrown when the argValue argument contains an environment that is not in an addable state. ThrowIfNotInUpdateableState(IGuard, Application, String, String, String, Int32) This method throws an exception if the argValue argument contains an environment that is not in an updateable state. Declaration public static IGuard ThrowIfNotInUpdateableState(this IGuard guard, Application argValue, string argName, string memberName = \"\", string sourceFilePath = \"\", int sourceLineNumber = 0) Parameters Type Name Description CG.Validations.IGuard guard The guard instance to use for the operation. Application argValue The argument to test. System.String argName The argument name. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. Returns Type Description CG.Validations.IGuard The guard argument. Exceptions Type Condition System.ArgumentException This exception is thrown when the argValue argument contains an environment that is not in an updateable state. ThrowIfNotInUpdateableState(IGuard, Environment, String, String, String, Int32) This method throws an exception if the argValue argument contains an environment that is not in an updateable state. Declaration public static IGuard ThrowIfNotInUpdateableState(this IGuard guard, Environment argValue, string argName, string memberName = \"\", string sourceFilePath = \"\", int sourceLineNumber = 0) Parameters Type Name Description CG.Validations.IGuard guard The guard instance to use for the operation. Environment argValue The argument to test. System.String argName The argument name. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. Returns Type Description CG.Validations.IGuard The guard argument. Exceptions Type Condition System.ArgumentException This exception is thrown when the argValue argument contains an environment that is not in an updateable state."
  },
  "api/CG.Olive.Models.html": {
    "href": "api/CG.Olive.Models.html",
    "title": "Namespace CG.Olive.Models",
    "keywords": "Namespace CG.Olive.Models Classes Application This class is a model that represents a configuration application. Environment This class is a model that represents a configuration environment. GuardExtensions This class contains extension methods related to the CG.Validations.IGuard type. Setting This class represents a configuration setting. Upload This class is a model that represents a configuration upload."
  },
  "api/CG.Olive.Models.Setting.html": {
    "href": "api/CG.Olive.Models.Setting.html",
    "title": "Class Setting",
    "keywords": "Class Setting This class represents a configuration setting. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Business.Models.ModelBase Setting Implements System.ComponentModel.DataAnnotations.IValidatableObject CG.Business.Models.IModel Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : CG.Olive.Models Assembly : CG.Olive.Abstractions.dll Syntax public class Setting : ModelBase, IValidatableObject, IModel Properties Application This property contains a reference to the associated application for this setting. Declaration public virtual Application Application { get; set; } Property Value Type Description Application ApplicationId This property contains an identifier for the associated application for this setting. Declaration public int ApplicationId { get; set; } Property Value Type Description System.Int32 Comment This property contains an optional comment for this setting. Declaration [MaxLength(255)] public string Comment { get; set; } Property Value Type Description System.String CreatedBy This property contains the name of the person who created the setting. Declaration [MaxLength(50)] public string CreatedBy { get; set; } Property Value Type Description System.String CreatedDate This property contains the date when the setting was created. Declaration public DateTime CreatedDate { get; set; } Property Value Type Description System.DateTime Environment This property contains a reference to the associated environment for this setting. Declaration public virtual Environment Environment { get; set; } Property Value Type Description Environment EnvironmentId This property contains an optional environment identifier for this setting. Declaration public int EnvironmentId { get; set; } Property Value Type Description System.Int32 Id This property is the unique identifier for the setting. Declaration public int Id { get; set; } Property Value Type Description System.Int32 Key This property contains the key for this setting. Declaration [Required] [MaxLength(255)] public string Key { get; set; } Property Value Type Description System.String UpdatedBy This property contains the name of the person who last updated the setting. Declaration [MaxLength(50)] public string UpdatedBy { get; set; } Property Value Type Description System.String UpdatedDate This property contains the date when the setting was last updated. Declaration public DateTime? UpdatedDate { get; set; } Property Value Type Description System.Nullable < System.DateTime > Upload This property contains a reference to the associatred upload for the setting. Declaration public virtual Upload Upload { get; set; } Property Value Type Description Upload UploadId This property contains an identifier for the associated upload for the setting. Declaration public int UploadId { get; set; } Property Value Type Description System.Int32 Value This property contains the value for this setting. Declaration public string Value { get; set; } Property Value Type Description System.String Methods Equals(Object) This method is overriden in order to determine equality. Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj The model to compare with. Returns Type Description System.Boolean True if the objects are equal; false otherwise. Overrides System.Object.Equals(System.Object) GetHashCode() This method returns a hashcode for the object. Declaration public override int GetHashCode() Returns Type Description System.Int32 A hashcode for the object. Overrides System.Object.GetHashCode() ToString() This method returns a string that represents the current model. Declaration public override string ToString() Returns Type Description System.String A string that represents the current object. Overrides System.Object.ToString() Implements System.ComponentModel.DataAnnotations.IValidatableObject CG.Business.Models.IModel"
  },
  "api/CG.Olive.Models.Upload.html": {
    "href": "api/CG.Olive.Models.Upload.html",
    "title": "Class Upload",
    "keywords": "Class Upload This class is a model that represents a configuration upload. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Business.Models.ModelBase Upload Implements System.ComponentModel.DataAnnotations.IValidatableObject CG.Business.Models.IModel Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : CG.Olive.Models Assembly : CG.Olive.Abstractions.dll Syntax public class Upload : ModelBase, IValidatableObject, IModel Properties Application This property contains the associated application. Declaration [Required] public virtual Application Application { get; set; } Property Value Type Description Application ApplicationId This property contains the application associated with the upload. Declaration public int ApplicationId { get; set; } Property Value Type Description System.Int32 CreatedBy This property contains the name of the user who created the upload. Declaration public string CreatedBy { get; set; } Property Value Type Description System.String CreatedDate This property contains the date when the upload was created. Declaration public DateTime CreatedDate { get; set; } Property Value Type Description System.DateTime Environment This property contains the environment associated with the upload. Declaration public virtual Environment Environment { get; set; } Property Value Type Description Environment EnvironmentId This property identifies the environment associated with the upload. Declaration public int EnvironmentId { get; set; } Property Value Type Description System.Int32 FileName This property contains the original file name for the upload. Declaration [Required] [MaxLength(260)] public string FileName { get; set; } Property Value Type Description System.String Id This property contains a unique identifier for the upload. Declaration public int Id { get; set; } Property Value Type Description System.Int32 Json This property contains the JSON for the upload. Declaration [Required] public string Json { get; set; } Property Value Type Description System.String Size This property contains the size of the JSON upload. Declaration public long Size { get; set; } Property Value Type Description System.Int64 UpdatedBy This property contains the name of the user who last modified the upload. Declaration public string UpdatedBy { get; set; } Property Value Type Description System.String UpdatedDate This property contains the date when the upload was last modified. Declaration public DateTime? UpdatedDate { get; set; } Property Value Type Description System.Nullable < System.DateTime > Methods Equals(Object) This method is overriden in order to determine equality. Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj The model to compare with. Returns Type Description System.Boolean True if the objects are equal; false otherwise. Overrides System.Object.Equals(System.Object) GetHashCode() This method returns a hashcode for the object. Declaration public override int GetHashCode() Returns Type Description System.Int32 A hashcode for the object. Overrides System.Object.GetHashCode() ToString() This method returns a string that represents the current model. Declaration public override string ToString() Returns Type Description System.String A string that represents the current object. Overrides System.Object.ToString() Implements System.ComponentModel.DataAnnotations.IValidatableObject CG.Business.Models.IModel"
  },
  "api/CG.Olive.Repositories.html": {
    "href": "api/CG.Olive.Repositories.html",
    "title": "Namespace CG.Olive.Repositories",
    "keywords": "Namespace CG.Olive.Repositories Interfaces IApplicationRepository This interface represents an object that manages the storage and retrival of Application objects. IEnvironmentRepository This interface represents an object that manages the storage and retrival of Environment objects. ISettingRepository This interface represents an object that manages the storage and retrival of Setting objects. IUploadRepository This interface represents an object that manages the storage and retrival of Upload objects."
  },
  "api/CG.Olive.Repositories.IApplicationRepository.html": {
    "href": "api/CG.Olive.Repositories.IApplicationRepository.html",
    "title": "Interface IApplicationRepository",
    "keywords": "Interface IApplicationRepository This interface represents an object that manages the storage and retrival of Application objects. Inherited Members System.IDisposable.Dispose() Namespace : CG.Olive.Repositories Assembly : CG.Olive.Abstractions.dll Syntax public interface IApplicationRepository : IRepository, IDisposable Methods AddAsync(Application, CancellationToken) This method adds a new Application object to the repository. Declaration Task<Application> AddAsync(Application model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Application model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Application > A task to perform the operation that returns the newly added Application object. AsQueryable() This method returns an System.Linq.IQueryable<T> object for the collection of Application objects maintained by this repository. Declaration IQueryable<Application> AsQueryable() Returns Type Description System.Linq.IQueryable < Application > A System.Linq.IQueryable<T> object. DeleteAsync(Application, CancellationToken) This method deletes an existing Application object from the store. Declaration Task DeleteAsync(Application model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Application model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task A task to perform the operation that returns the newly updated Application object. UpdateAsync(Application, CancellationToken) This method updates an existing Application object in the repository. Declaration Task<Application> UpdateAsync(Application model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Application model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Application > A task to perform the operation that returns the newly updated Application object."
  },
  "api/CG.Olive.Repositories.IEnvironmentRepository.html": {
    "href": "api/CG.Olive.Repositories.IEnvironmentRepository.html",
    "title": "Interface IEnvironmentRepository",
    "keywords": "Interface IEnvironmentRepository This interface represents an object that manages the storage and retrival of Environment objects. Inherited Members System.IDisposable.Dispose() Namespace : CG.Olive.Repositories Assembly : CG.Olive.Abstractions.dll Syntax public interface IEnvironmentRepository : IRepository, IDisposable Methods AddAsync(Environment, CancellationToken) This method adds a new Environment object to the repository. Declaration Task<Environment> AddAsync(Environment model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Environment model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Environment > A task to perform the operation that returns the newly added Environment object. AsQueryable() This method returns an System.Linq.IQueryable<T> object for the collection of Environment objects maintained by this repository. Declaration IQueryable<Environment> AsQueryable() Returns Type Description System.Linq.IQueryable < Environment > A System.Linq.IQueryable<T> object. ClearDefault(String, CancellationToken) This method removes the \"IsDefault\" flag from any rows in the repository. Declaration Task ClearDefault(string updatedBy, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String updatedBy The name of the person performing the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task A task to perform the operation. DeleteAsync(Environment, CancellationToken) This method deletes an existing Environment object from the store. Declaration Task DeleteAsync(Environment model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Environment model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task A task to perform the operation that returns the newly updated Environment object. UpdateAsync(Environment, CancellationToken) This method updates an existing Environment object in the repository. Declaration Task<Environment> UpdateAsync(Environment model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Environment model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Environment > A task to perform the operation that returns the newly updated Environment object."
  },
  "api/CG.Olive.Repositories.ISettingRepository.html": {
    "href": "api/CG.Olive.Repositories.ISettingRepository.html",
    "title": "Interface ISettingRepository",
    "keywords": "Interface ISettingRepository This interface represents an object that manages the storage and retrival of Setting objects. Inherited Members System.IDisposable.Dispose() Namespace : CG.Olive.Repositories Assembly : CG.Olive.Abstractions.dll Syntax public interface ISettingRepository : IRepository, IDisposable Methods AddAsync(Setting, CancellationToken) This method adds a new Setting object to the repository. Declaration Task<Setting> AddAsync(Setting model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Setting model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Setting > A task to perform the operation that returns the newly added Setting object. AsQueryable() This method returns an System.Linq.IQueryable<T> object for the collection of Setting objects maintained by this repository. Declaration IQueryable<Setting> AsQueryable() Returns Type Description System.Linq.IQueryable < Setting > A System.Linq.IQueryable<T> object. DeleteAsync(Setting, CancellationToken) This method deletes an existing Setting object from the store. Declaration Task DeleteAsync(Setting model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Setting model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task A task to perform the operation that returns the newly updated Setting object. UpdateAsync(Setting, CancellationToken) This method updates an existing Setting object in the repository. Declaration Task<Setting> UpdateAsync(Setting model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Setting model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Setting > A task to perform the operation that returns the newly updated Setting object."
  },
  "api/CG.Olive.Repositories.IUploadRepository.html": {
    "href": "api/CG.Olive.Repositories.IUploadRepository.html",
    "title": "Interface IUploadRepository",
    "keywords": "Interface IUploadRepository This interface represents an object that manages the storage and retrival of Upload objects. Inherited Members System.IDisposable.Dispose() Namespace : CG.Olive.Repositories Assembly : CG.Olive.Abstractions.dll Syntax public interface IUploadRepository : IRepository, IDisposable Methods AddAsync(Upload, CancellationToken) This method adds a new Upload object to the repository. Declaration Task<Upload> AddAsync(Upload model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Upload model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Upload > A task to perform the operation that returns the newly added Upload object. AsQueryable() This method returns an System.Linq.IQueryable<T> object for the collection of Upload objects maintained by this repository. Declaration IQueryable<Upload> AsQueryable() Returns Type Description System.Linq.IQueryable < Upload > A System.Linq.IQueryable<T> object. DeleteAsync(Upload, CancellationToken) This method deletes an existing Upload object from the store. Declaration Task DeleteAsync(Upload model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Upload model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task A task to perform the operation that returns the newly updated Upload object. UpdateAsync(Upload, CancellationToken) This method updates an existing Upload object in the repository. Declaration Task<Upload> UpdateAsync(Upload model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Upload model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Upload > A task to perform the operation that returns the newly updated Upload object."
  },
  "api/CG.Olive.SqlServer.DesignTimeBerylDbContextFactory.html": {
    "href": "api/CG.Olive.SqlServer.DesignTimeBerylDbContextFactory.html",
    "title": "Class DesignTimeBerylDbContextFactory",
    "keywords": "Class DesignTimeBerylDbContextFactory This class is a default implementation of the Microsoft.EntityFrameworkCore.Design.IDesignTimeDbContextFactory<TContext> interface, used only for local, dev migrations. Inheritance System.Object DesignTimeBerylDbContextFactory Implements Microsoft.EntityFrameworkCore.Design.IDesignTimeDbContextFactory < OliveDbContext > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.SqlServer Assembly : CG.Olive.SqlServer.dll Syntax public class DesignTimeBerylDbContextFactory : IDesignTimeDbContextFactory<OliveDbContext> Remarks This class contains a factory used by EFCORE to create data-context instances during migration related operations. Methods CreateDbContext(String[]) This method creates a new OliveDbContext instance. Declaration public OliveDbContext CreateDbContext(string[] args) Parameters Type Name Description System.String [] args Optional arguments. Returns Type Description OliveDbContext A OliveDbContext instance. Implements Microsoft.EntityFrameworkCore.Design.IDesignTimeDbContextFactory<TContext>"
  },
  "api/CG.Olive.SqlServer.html": {
    "href": "api/CG.Olive.SqlServer.html",
    "title": "Namespace CG.Olive.SqlServer",
    "keywords": "Namespace CG.Olive.SqlServer Classes DesignTimeBerylDbContextFactory This class is a default implementation of the Microsoft.EntityFrameworkCore.Design.IDesignTimeDbContextFactory<TContext> interface, used only for local, dev migrations. OliveDbContext This class is a data-context for the CG.Olive library."
  },
  "api/CG.Olive.SqlServer.Migrations.html": {
    "href": "api/CG.Olive.SqlServer.Migrations.html",
    "title": "Namespace CG.Olive.SqlServer.Migrations",
    "keywords": "Namespace CG.Olive.SqlServer.Migrations Classes InitialCreate"
  },
  "api/CG.Olive.SqlServer.Migrations.InitialCreate.html": {
    "href": "api/CG.Olive.SqlServer.Migrations.InitialCreate.html",
    "title": "Class InitialCreate",
    "keywords": "Class InitialCreate Inheritance System.Object Microsoft.EntityFrameworkCore.Migrations.Migration InitialCreate Inherited Members Microsoft.EntityFrameworkCore.Migrations.Migration.InitialDatabase Microsoft.EntityFrameworkCore.Migrations.Migration.TargetModel Microsoft.EntityFrameworkCore.Migrations.Migration.UpOperations Microsoft.EntityFrameworkCore.Migrations.Migration.DownOperations Microsoft.EntityFrameworkCore.Migrations.Migration.ActiveProvider System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.SqlServer.Migrations Assembly : CG.Olive.SqlServer.dll Syntax [DbContext(typeof(OliveDbContext))] [Migration(\"20210404174653_InitialCreate\")] public class InitialCreate : Migration Methods BuildTargetModel(ModelBuilder) Declaration protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder) Down(MigrationBuilder) Declaration protected override void Down(MigrationBuilder migrationBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder migrationBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder) Up(MigrationBuilder) Declaration protected override void Up(MigrationBuilder migrationBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder migrationBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)"
  },
  "api/CG.Olive.SqlServer.OliveDbContext.html": {
    "href": "api/CG.Olive.SqlServer.OliveDbContext.html",
    "title": "Class OliveDbContext",
    "keywords": "Class OliveDbContext This class is a data-context for the CG.Olive library. Inheritance System.Object Microsoft.EntityFrameworkCore.DbContext OliveDbContext Implements Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure < System.IServiceProvider > Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies Microsoft.EntityFrameworkCore.Internal.IDbSetCache Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable System.IDisposable System.IAsyncDisposable Microsoft.EntityFrameworkCore.Infrastructure.IResettableService Inherited Members Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbSetCache.GetOrAddSet(Microsoft.EntityFrameworkCore.Internal.IDbSetSource, System.Type) Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbSetCache.GetOrAddSet(Microsoft.EntityFrameworkCore.Internal.IDbSetSource, System.String, System.Type) Microsoft.EntityFrameworkCore.DbContext.Set<TEntity>() Microsoft.EntityFrameworkCore.DbContext.Set<TEntity>(System.String) Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder) Microsoft.EntityFrameworkCore.DbContext.SaveChanges() Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean) Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean, System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.ClearLease() Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SetLease(Microsoft.EntityFrameworkCore.Internal.DbContextLease) Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SnapshotConfiguration() Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IResettableService.ResetState() Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IResettableService.ResetStateAsync(System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.Dispose() Microsoft.EntityFrameworkCore.DbContext.DisposeAsync() Microsoft.EntityFrameworkCore.DbContext.Entry<TEntity>(TEntity) Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object) Microsoft.EntityFrameworkCore.DbContext.Add<TEntity>(TEntity) Microsoft.EntityFrameworkCore.DbContext.AddAsync<TEntity>(TEntity, System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.Attach<TEntity>(TEntity) Microsoft.EntityFrameworkCore.DbContext.Update<TEntity>(TEntity) Microsoft.EntityFrameworkCore.DbContext.Remove<TEntity>(TEntity) Microsoft.EntityFrameworkCore.DbContext.Add(System.Object) Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object, System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object) Microsoft.EntityFrameworkCore.DbContext.Update(System.Object) Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object) Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable<System.Object>) Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable<System.Object>, System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable<System.Object>) Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable<System.Object>) Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable<System.Object>) Microsoft.EntityFrameworkCore.DbContext.Find(System.Type, System.Object[]) Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type, System.Object[]) Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type, System.Object[], System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.Find<TEntity>(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.FindAsync<TEntity>(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.FindAsync<TEntity>(System.Object[], System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.FromExpression<TResult>(System.Linq.Expressions.Expression<System.Func<System.Linq.IQueryable<TResult>>>) Microsoft.EntityFrameworkCore.DbContext.Database Microsoft.EntityFrameworkCore.DbContext.ChangeTracker Microsoft.EntityFrameworkCore.DbContext.Model Microsoft.EntityFrameworkCore.DbContext.ContextId Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.SetSource Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.EntityFinderFactory Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.QueryProvider Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.StateManager Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.ChangeDetector Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.EntityGraphAttacher Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.UpdateLogger Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.InfrastructureLogger Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance Microsoft.EntityFrameworkCore.DbContext.SavingChanges Microsoft.EntityFrameworkCore.DbContext.SavedChanges Microsoft.EntityFrameworkCore.DbContext.SaveChangesFailed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.SqlServer Assembly : CG.Olive.SqlServer.dll Syntax public class OliveDbContext : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IDisposable, IAsyncDisposable, IResettableService Remarks This class contains those parts of the database that are specific to the CG.Olive.SqlServer library. Constructors OliveDbContext(DbContextOptions<OliveDbContext>) This constructor creates a new instance of the OliveDbContext class. Declaration public OliveDbContext(DbContextOptions<OliveDbContext> options) Parameters Type Name Description Microsoft.EntityFrameworkCore.DbContextOptions < OliveDbContext > options The options to use with the data-context. Properties Applications This property contains a set a Application objects. Declaration public virtual DbSet<Application> Applications { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < Application > Environments This property contains a set a Environment objects. Declaration public virtual DbSet<Environment> Environments { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < Environment > Settings This property contains a set a Setting objects. Declaration public virtual DbSet<Setting> Settings { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < Setting > Uploads This property contains a set a Upload objects. Declaration public virtual DbSet<Upload> Uploads { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < Upload > Methods OnModelCreating(ModelBuilder) This method is called to create the data model for the data-context. Declaration protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder The builder to use for the operation. Overrides Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder) Implements Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T> Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies Microsoft.EntityFrameworkCore.Internal.IDbSetCache Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable System.IDisposable System.IAsyncDisposable Microsoft.EntityFrameworkCore.Infrastructure.IResettableService"
  },
  "api/CG.Olive.SqlServer.Options.html": {
    "href": "api/CG.Olive.SqlServer.Options.html",
    "title": "Namespace CG.Olive.SqlServer.Options",
    "keywords": "Namespace CG.Olive.SqlServer.Options Classes OliveRepositoryOptions This class represents repository configuration options for all the CG.Olive specific repositories."
  },
  "api/CG.Olive.SqlServer.Options.OliveRepositoryOptions.html": {
    "href": "api/CG.Olive.SqlServer.Options.OliveRepositoryOptions.html",
    "title": "Class OliveRepositoryOptions",
    "keywords": "Class OliveRepositoryOptions This class represents repository configuration options for all the CG.Olive specific repositories. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase CG.Business.Repositories.Options.RepositoryOptions CG.Business.Repositories.Options.LinqRepositoryOptions CG.Linq.EFCore.Repositories.Options.EFCoreRepositoryOptions OliveRepositoryOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.Linq.EFCore.Repositories.Options.EFCoreRepositoryOptions.ApplyMigrations CG.Linq.EFCore.Repositories.Options.EFCoreRepositoryOptions.DropDatabase CG.Linq.EFCore.Repositories.Options.EFCoreRepositoryOptions.SeedDatabase CG.Business.Repositories.Options.LinqRepositoryOptions.ConnectionString CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.SqlServer.Options Assembly : CG.Olive.SqlServer.dll Syntax public class OliveRepositoryOptions : EFCoreRepositoryOptions, IValidatableObject Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Olive.SqlServer.Repositories.ApplicationRepository.html": {
    "href": "api/CG.Olive.SqlServer.Repositories.ApplicationRepository.html",
    "title": "Class ApplicationRepository",
    "keywords": "Class ApplicationRepository This class is a SQL Server implementation of the IApplicationRepository interface. Inheritance System.Object CG.DisposableBase CG.Business.Repositories.RepositoryBase CG.Linq.EFCore.Repositories.EFCoreRepositoryBase < OliveDbContext , Microsoft.Extensions.Options.IOptions < OliveRepositoryOptions >> ApplicationRepository Implements IApplicationRepository CG.Business.Repositories.IRepository System.IDisposable Inherited Members CG.Linq.EFCore.Repositories.EFCoreRepositoryBase<CG.Olive.SqlServer.OliveDbContext, Microsoft.Extensions.Options.IOptions<CG.Olive.SqlServer.Options.OliveRepositoryOptions>>.Factory CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.SqlServer.Repositories Assembly : CG.Olive.SqlServer.dll Syntax public class ApplicationRepository : EFCoreRepositoryBase<OliveDbContext, IOptions<OliveRepositoryOptions>>, IApplicationRepository, IRepository, IDisposable Constructors ApplicationRepository(IOptions<OliveRepositoryOptions>, DbContextFactory<OliveDbContext>) This constructor creates a new instance of the ApplicationRepository class. Declaration public ApplicationRepository(IOptions<OliveRepositoryOptions> options, DbContextFactory<OliveDbContext> factory) Parameters Type Name Description Microsoft.Extensions.Options.IOptions < OliveRepositoryOptions > options The options for the repository. CG.Linq.EFCore.DbContextFactory < OliveDbContext > factory The data-context factory for the repository. Methods AddAsync(Application, CancellationToken) This method adds a new Application object to the repository. Declaration public virtual Task<Application> AddAsync(Application model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Application model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Application > A task to perform the operation that returns the newly added Application object. AsQueryable() This method returns an System.Linq.IQueryable<T> object for the collection of Application objects maintained by this repository. Declaration public virtual IQueryable<Application> AsQueryable() Returns Type Description System.Linq.IQueryable < Application > A System.Linq.IQueryable<T> object. DeleteAsync(Application, CancellationToken) This method deletes an existing Application object from the store. Declaration public virtual Task DeleteAsync(Application model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Application model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task A task to perform the operation that returns the newly updated Application object. UpdateAsync(Application, CancellationToken) This method updates an existing Application object in the repository. Declaration public virtual Task<Application> UpdateAsync(Application model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Application model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Application > A task to perform the operation that returns the newly updated Application object. Implements IApplicationRepository CG.Business.Repositories.IRepository System.IDisposable"
  },
  "api/CG.Olive.SqlServer.Repositories.EnvironmentRepository.html": {
    "href": "api/CG.Olive.SqlServer.Repositories.EnvironmentRepository.html",
    "title": "Class EnvironmentRepository",
    "keywords": "Class EnvironmentRepository This class is a SQL server implementation of the IEnvironmentRepository interface. Inheritance System.Object CG.DisposableBase CG.Business.Repositories.RepositoryBase CG.Linq.EFCore.Repositories.EFCoreRepositoryBase < OliveDbContext , Microsoft.Extensions.Options.IOptions < OliveRepositoryOptions >> EnvironmentRepository Implements IEnvironmentRepository CG.Business.Repositories.IRepository System.IDisposable Inherited Members CG.Linq.EFCore.Repositories.EFCoreRepositoryBase<CG.Olive.SqlServer.OliveDbContext, Microsoft.Extensions.Options.IOptions<CG.Olive.SqlServer.Options.OliveRepositoryOptions>>.Factory CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.SqlServer.Repositories Assembly : CG.Olive.SqlServer.dll Syntax public class EnvironmentRepository : EFCoreRepositoryBase<OliveDbContext, IOptions<OliveRepositoryOptions>>, IEnvironmentRepository, IRepository, IDisposable Constructors EnvironmentRepository(IOptions<OliveRepositoryOptions>, DbContextFactory<OliveDbContext>) This constructor creates a new instance of the EnvironmentRepository class. Declaration public EnvironmentRepository(IOptions<OliveRepositoryOptions> options, DbContextFactory<OliveDbContext> factory) Parameters Type Name Description Microsoft.Extensions.Options.IOptions < OliveRepositoryOptions > options The options for the repository. CG.Linq.EFCore.DbContextFactory < OliveDbContext > factory The data-context factory for the repository. Methods AddAsync(Environment, CancellationToken) This method adds a new Environment object to the repository. Declaration public virtual Task<Environment> AddAsync(Environment model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Environment model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Environment > A task to perform the operation that returns the newly added Environment object. AsQueryable() This method returns an System.Linq.IQueryable<T> object for the collection of Environment objects maintained by this repository. Declaration public virtual IQueryable<Environment> AsQueryable() Returns Type Description System.Linq.IQueryable < Environment > A System.Linq.IQueryable<T> object. ClearDefault(String, CancellationToken) This method removes the \"IsDefault\" flag from any rows in the repository. Declaration public virtual Task ClearDefault(string updatedBy, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String updatedBy The name of the person performing the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task A task to perform the operation. DeleteAsync(Environment, CancellationToken) This method deletes an existing Environment object from the store. Declaration public virtual Task DeleteAsync(Environment model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Environment model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task A task to perform the operation that returns the newly updated Environment object. UpdateAsync(Environment, CancellationToken) This method updates an existing Environment object in the repository. Declaration public virtual Task<Environment> UpdateAsync(Environment model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Environment model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Environment > A task to perform the operation that returns the newly updated Environment object. Implements IEnvironmentRepository CG.Business.Repositories.IRepository System.IDisposable"
  },
  "api/CG.Olive.SqlServer.Repositories.html": {
    "href": "api/CG.Olive.SqlServer.Repositories.html",
    "title": "Namespace CG.Olive.SqlServer.Repositories",
    "keywords": "Namespace CG.Olive.SqlServer.Repositories Classes ApplicationRepository This class is a SQL Server implementation of the IApplicationRepository interface. EnvironmentRepository This class is a SQL server implementation of the IEnvironmentRepository interface. SettingRepository This class is a SQL Server implementation of the ISettingRepository interface. UploadRepository This class is a SQL Server implementation of the IUploadRepository interface."
  },
  "api/CG.Olive.SqlServer.Repositories.SettingRepository.html": {
    "href": "api/CG.Olive.SqlServer.Repositories.SettingRepository.html",
    "title": "Class SettingRepository",
    "keywords": "Class SettingRepository This class is a SQL Server implementation of the ISettingRepository interface. Inheritance System.Object CG.DisposableBase CG.Business.Repositories.RepositoryBase CG.Linq.EFCore.Repositories.EFCoreRepositoryBase < OliveDbContext , Microsoft.Extensions.Options.IOptions < OliveRepositoryOptions >> SettingRepository Implements ISettingRepository CG.Business.Repositories.IRepository System.IDisposable Inherited Members CG.Linq.EFCore.Repositories.EFCoreRepositoryBase<CG.Olive.SqlServer.OliveDbContext, Microsoft.Extensions.Options.IOptions<CG.Olive.SqlServer.Options.OliveRepositoryOptions>>.Factory CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.SqlServer.Repositories Assembly : CG.Olive.SqlServer.dll Syntax public class SettingRepository : EFCoreRepositoryBase<OliveDbContext, IOptions<OliveRepositoryOptions>>, ISettingRepository, IRepository, IDisposable Constructors SettingRepository(IOptions<OliveRepositoryOptions>, DbContextFactory<OliveDbContext>) This constructor creates a new instance of the SettingRepository class. Declaration public SettingRepository(IOptions<OliveRepositoryOptions> options, DbContextFactory<OliveDbContext> factory) Parameters Type Name Description Microsoft.Extensions.Options.IOptions < OliveRepositoryOptions > options The options for the repository. CG.Linq.EFCore.DbContextFactory < OliveDbContext > factory The data-context factory for the repository. Methods AddAsync(Setting, CancellationToken) This method adds a new Setting object to the repository. Declaration public virtual Task<Setting> AddAsync(Setting model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Setting model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Setting > A task to perform the operation that returns the newly added Setting object. AsQueryable() This method returns an System.Linq.IQueryable<T> object for the collection of Setting objects maintained by this repository. Declaration public virtual IQueryable<Setting> AsQueryable() Returns Type Description System.Linq.IQueryable < Setting > A System.Linq.IQueryable<T> object. DeleteAsync(Setting, CancellationToken) This method deletes an existing Setting object from the store. Declaration public virtual Task DeleteAsync(Setting model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Setting model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task A task to perform the operation that returns the newly updated Setting object. UpdateAsync(Setting, CancellationToken) This method updates an existing Setting object in the repository. Declaration public virtual Task<Setting> UpdateAsync(Setting model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Setting model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Setting > A task to perform the operation that returns the newly updated Setting object. Implements ISettingRepository CG.Business.Repositories.IRepository System.IDisposable"
  },
  "api/CG.Olive.SqlServer.Repositories.UploadRepository.html": {
    "href": "api/CG.Olive.SqlServer.Repositories.UploadRepository.html",
    "title": "Class UploadRepository",
    "keywords": "Class UploadRepository This class is a SQL Server implementation of the IUploadRepository interface. Inheritance System.Object CG.DisposableBase CG.Business.Repositories.RepositoryBase CG.Linq.EFCore.Repositories.EFCoreRepositoryBase < OliveDbContext , Microsoft.Extensions.Options.IOptions < OliveRepositoryOptions >> UploadRepository Implements IUploadRepository CG.Business.Repositories.IRepository System.IDisposable Inherited Members CG.Linq.EFCore.Repositories.EFCoreRepositoryBase<CG.Olive.SqlServer.OliveDbContext, Microsoft.Extensions.Options.IOptions<CG.Olive.SqlServer.Options.OliveRepositoryOptions>>.Factory CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.SqlServer.Repositories Assembly : CG.Olive.SqlServer.dll Syntax public class UploadRepository : EFCoreRepositoryBase<OliveDbContext, IOptions<OliveRepositoryOptions>>, IUploadRepository, IRepository, IDisposable Constructors UploadRepository(IOptions<OliveRepositoryOptions>, DbContextFactory<OliveDbContext>) This constructor creates a new instance of the UploadRepository class. Declaration public UploadRepository(IOptions<OliveRepositoryOptions> options, DbContextFactory<OliveDbContext> factory) Parameters Type Name Description Microsoft.Extensions.Options.IOptions < OliveRepositoryOptions > options The options for the repository. CG.Linq.EFCore.DbContextFactory < OliveDbContext > factory The data-context factory for the repository. Methods AddAsync(Upload, CancellationToken) This method adds a new Upload object to the repository. Declaration public virtual Task<Upload> AddAsync(Upload model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Upload model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Upload > A task to perform the operation that returns the newly added Upload object. AsQueryable() This method returns an System.Linq.IQueryable<T> object for the collection of Upload objects maintained by this repository. Declaration public virtual IQueryable<Upload> AsQueryable() Returns Type Description System.Linq.IQueryable < Upload > A System.Linq.IQueryable<T> object. DeleteAsync(Upload, CancellationToken) This method deletes an existing Upload object from the store. Declaration public virtual Task DeleteAsync(Upload model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Upload model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task A task to perform the operation that returns the newly updated Upload object. UpdateAsync(Upload, CancellationToken) This method updates an existing Upload object in the repository. Declaration public virtual Task<Upload> UpdateAsync(Upload model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Upload model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Upload > A task to perform the operation that returns the newly updated Upload object. Implements IUploadRepository CG.Business.Repositories.IRepository System.IDisposable"
  },
  "api/CG.Olive.Stores.ApplicationStore.html": {
    "href": "api/CG.Olive.Stores.ApplicationStore.html",
    "title": "Class ApplicationStore",
    "keywords": "Class ApplicationStore This class is a default implementation of the IApplicationStore interface. Inheritance System.Object CG.DisposableBase CG.Business.Stores.StoreBase ApplicationStore Implements IApplicationStore CG.Business.Stores.IStore System.IDisposable Inherited Members CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.Stores Assembly : CG.Olive.dll Syntax public class ApplicationStore : StoreBase, IApplicationStore, IStore, IDisposable Constructors ApplicationStore(IApplicationRepository) This constructor creates a new instance of the ApplicationStore class. Declaration public ApplicationStore(IApplicationRepository applicationRepository) Parameters Type Name Description IApplicationRepository applicationRepository The application repository to use with the store. Properties ApplicationRepository This property contains a reference to an application repository. Declaration protected IApplicationRepository ApplicationRepository { get; } Property Value Type Description IApplicationRepository Methods AddAsync(Application, CancellationToken) This method adds a new Application object to the store. Declaration public virtual Task<Application> AddAsync(Application model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Application model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Application > A task to perform the operation that returns the newly added Application object. AsQueryable() This method returns an System.Linq.IQueryable<T> object for the collection of Application objects maintained by this store. Declaration public virtual IQueryable<Application> AsQueryable() Returns Type Description System.Linq.IQueryable < Application > A System.Linq.IQueryable<T> object. DeleteAsync(Int32, CancellationToken) This method deletes an existing Application object from the store. Declaration public virtual Task DeleteAsync(int id, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Int32 id The identifier for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task A task to perform the operation that returns the newly updated Application object. UpdateAsync(Application, CancellationToken) This method updates an existing Application object in the store. Declaration public virtual Task<Application> UpdateAsync(Application model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Application model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Application > A task to perform the operation that returns the newly updated Application object. Implements IApplicationStore CG.Business.Stores.IStore System.IDisposable"
  },
  "api/CG.Olive.Stores.ConfigurationStore.html": {
    "href": "api/CG.Olive.Stores.ConfigurationStore.html",
    "title": "Class ConfigurationStore",
    "keywords": "Class ConfigurationStore This class is a default implementation of the IConfigurationStore interface. Inheritance System.Object CG.DisposableBase CG.Business.Stores.StoreBase ConfigurationStore Implements IConfigurationStore CG.Business.Stores.IStore System.IDisposable Inherited Members CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.Stores Assembly : CG.Olive.dll Syntax public class ConfigurationStore : StoreBase, IConfigurationStore, IStore, IDisposable Constructors ConfigurationStore(IApplicationStore, IEnvironmentStore, ISettingStore) This constructor creates a new instance of the ConfigurationStore class. Declaration public ConfigurationStore(IApplicationStore applicationStore, IEnvironmentStore environmentStore, ISettingStore settingStore) Parameters Type Name Description IApplicationStore applicationStore The application store to use with the store. IEnvironmentStore environmentStore The environment store to use with the store. ISettingStore settingStore The setting store to use with the store. Properties ApplicationStore This property contains a reference to an application store. Declaration protected IApplicationStore ApplicationStore { get; } Property Value Type Description IApplicationStore EnvironmentStore This property contains a reference to an environment store. Declaration protected IEnvironmentStore EnvironmentStore { get; } Property Value Type Description IEnvironmentStore SettingStore This property contains a reference to a setting store. Declaration protected ISettingStore SettingStore { get; } Property Value Type Description ISettingStore Methods GetAsync(String, String, String, CancellationToken) This method returns the effective configuration for the specified application and environment. Declaration public virtual Task<IEnumerable<KeyValuePair<string, string>>> GetAsync(string sid, string skey, string environment, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String sid The application security identifier to use for the operation. System.String skey The application security key to use for the operation. System.String environment The optional environment name for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair < System.String , System.String >>> A task to perform the operation that returns an enumerable sequence of key-value pairs, that represent the configuration for the specified application and environment. Implements IConfigurationStore CG.Business.Stores.IStore System.IDisposable"
  },
  "api/CG.Olive.Stores.EnvironmentStore.html": {
    "href": "api/CG.Olive.Stores.EnvironmentStore.html",
    "title": "Class EnvironmentStore",
    "keywords": "Class EnvironmentStore This class is a default implementation of the IEnvironmentStore interface. Inheritance System.Object CG.DisposableBase CG.Business.Stores.StoreBase EnvironmentStore Implements IEnvironmentStore CG.Business.Stores.IStore System.IDisposable Inherited Members CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.Stores Assembly : CG.Olive.dll Syntax public class EnvironmentStore : StoreBase, IEnvironmentStore, IStore, IDisposable Constructors EnvironmentStore(IEnvironmentRepository) This constructor creates a new instance of the EnvironmentStore class. Declaration public EnvironmentStore(IEnvironmentRepository environmentRepository) Parameters Type Name Description IEnvironmentRepository environmentRepository The environment repository to use with the store. Properties EnvironmentRepository This property contains a reference to an environment repository. Declaration protected IEnvironmentRepository EnvironmentRepository { get; } Property Value Type Description IEnvironmentRepository Methods AddAsync(Environment, CancellationToken) This method adds a new Environment object to the store. Declaration public virtual Task<Environment> AddAsync(Environment model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Environment model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Environment > A task to perform the operation that returns the newly added Environment object. AsQueryable() This method returns an System.Linq.IQueryable<T> object for the collection of Environment objects maintained by this store. Declaration public virtual IQueryable<Environment> AsQueryable() Returns Type Description System.Linq.IQueryable < Environment > A System.Linq.IQueryable<T> object. DeleteAsync(Int32, CancellationToken) This method deletes an existing Environment object from the store. Declaration public virtual Task DeleteAsync(int id, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Int32 id The identifier for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task A task to perform the operation that returns the newly updated Environment object. UpdateAsync(Environment, CancellationToken) This method updates an existing Environment object in the store. Declaration public virtual Task<Environment> UpdateAsync(Environment model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Environment model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Environment > A task to perform the operation that returns the newly updated Application object. Implements IEnvironmentStore CG.Business.Stores.IStore System.IDisposable"
  },
  "api/CG.Olive.Stores.html": {
    "href": "api/CG.Olive.Stores.html",
    "title": "Namespace CG.Olive.Stores",
    "keywords": "Namespace CG.Olive.Stores Classes ApplicationStore This class is a default implementation of the IApplicationStore interface. ConfigurationStore This class is a default implementation of the IConfigurationStore interface. EnvironmentStore This class is a default implementation of the IEnvironmentStore interface. SettingStore This class is a default implementation of the ISettingStore interface. UploadStore This class is a default implementation of the IUploadStore interface. Interfaces IApplicationStore This interface represents an object that manages the business logic for Application objects. IConfigurationStore This interface represents an object that manages configurations for external clients. IEnvironmentStore This interface represents an object that manages the business logic for Environment objects. ISettingStore This interface represents an object that manages the business logic for Setting objects. IUploadStore This interface represents an object that manages the business logic for Upload objects."
  },
  "api/CG.Olive.Stores.IApplicationStore.html": {
    "href": "api/CG.Olive.Stores.IApplicationStore.html",
    "title": "Interface IApplicationStore",
    "keywords": "Interface IApplicationStore This interface represents an object that manages the business logic for Application objects. Inherited Members System.IDisposable.Dispose() Namespace : CG.Olive.Stores Assembly : CG.Olive.Abstractions.dll Syntax public interface IApplicationStore : IStore, IDisposable Methods AddAsync(Application, CancellationToken) This method adds a new Application object to the store. Declaration Task<Application> AddAsync(Application model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Application model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Application > A task to perform the operation that returns the newly added Application object. AsQueryable() This method returns an System.Linq.IQueryable<T> object for the collection of Application objects maintained by this store. Declaration IQueryable<Application> AsQueryable() Returns Type Description System.Linq.IQueryable < Application > A System.Linq.IQueryable<T> object. DeleteAsync(Int32, CancellationToken) This method deletes an existing Application object from the store. Declaration Task DeleteAsync(int id, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Int32 id The identifier for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task A task to perform the operation that returns the newly updated Application object. UpdateAsync(Application, CancellationToken) This method updates an existing Application object in the store. Declaration Task<Application> UpdateAsync(Application model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Application model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Application > A task to perform the operation that returns the newly updated Application object."
  },
  "api/CG.Olive.Stores.IConfigurationStore.html": {
    "href": "api/CG.Olive.Stores.IConfigurationStore.html",
    "title": "Interface IConfigurationStore",
    "keywords": "Interface IConfigurationStore This interface represents an object that manages configurations for external clients. Inherited Members System.IDisposable.Dispose() Namespace : CG.Olive.Stores Assembly : CG.Olive.Abstractions.dll Syntax public interface IConfigurationStore : IStore, IDisposable Methods GetAsync(String, String, String, CancellationToken) This method returns the effective configuration for the specified application and environment. Declaration Task<IEnumerable<KeyValuePair<string, string>>> GetAsync(string sid, string skey, string environment, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String sid The application security identifier to use for the operation. System.String skey The application security key to use for the operation. System.String environment The optional environment name for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair < System.String , System.String >>> A task to perform the operation that returns an enumerable sequence of key-value pairs, that represent the configuration for the specified application and environment."
  },
  "api/CG.Olive.Stores.IEnvironmentStore.html": {
    "href": "api/CG.Olive.Stores.IEnvironmentStore.html",
    "title": "Interface IEnvironmentStore",
    "keywords": "Interface IEnvironmentStore This interface represents an object that manages the business logic for Environment objects. Inherited Members System.IDisposable.Dispose() Namespace : CG.Olive.Stores Assembly : CG.Olive.Abstractions.dll Syntax public interface IEnvironmentStore : IStore, IDisposable Methods AddAsync(Environment, CancellationToken) This method adds a new Environment object to the store. Declaration Task<Environment> AddAsync(Environment model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Environment model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Environment > A task to perform the operation that returns the newly added Environment object. AsQueryable() This method returns an System.Linq.IQueryable<T> object for the collection of Environment objects maintained by this store. Declaration IQueryable<Environment> AsQueryable() Returns Type Description System.Linq.IQueryable < Environment > A System.Linq.IQueryable<T> object. DeleteAsync(Int32, CancellationToken) This method deletes an existing Environment object from the store. Declaration Task DeleteAsync(int id, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Int32 id The identifier for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task A task to perform the operation that returns the newly updated Environment object. UpdateAsync(Environment, CancellationToken) This method updates an existing Environment object in the store. Declaration Task<Environment> UpdateAsync(Environment model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Environment model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Environment > A task to perform the operation that returns the newly updated Application object."
  },
  "api/CG.Olive.Stores.ISettingStore.html": {
    "href": "api/CG.Olive.Stores.ISettingStore.html",
    "title": "Interface ISettingStore",
    "keywords": "Interface ISettingStore This interface represents an object that manages the business logic for Setting objects. Inherited Members System.IDisposable.Dispose() Namespace : CG.Olive.Stores Assembly : CG.Olive.Abstractions.dll Syntax public interface ISettingStore : IStore, IDisposable Methods AddAsync(Setting, CancellationToken) This method adds a new Setting object to the store. Declaration Task<Setting> AddAsync(Setting model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Setting model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Setting > A task to perform the operation that returns the newly added Setting object. ApplyUploadAsync(Upload, String, CancellationToken) This method parses through an upload and saves the results as settings. Declaration Task<long> ApplyUploadAsync(Upload upload, string userName, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Upload upload The upload to use for the operation. System.String userName The user name of the person performing the aciton. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < System.Int64 > A task to perform the operation that returns a count of the number of Setting objects created for the upload. AsQueryable() This method returns an System.Linq.IQueryable<T> object for the collection of Setting objects maintained by this store. Declaration IQueryable<Setting> AsQueryable() Returns Type Description System.Linq.IQueryable < Setting > A System.Linq.IQueryable<T> object. DeleteAsync(Int32, CancellationToken) This method deletes an existing Setting object from the store. Declaration Task DeleteAsync(int id, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Int32 id The identifier for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task A task to perform the operation that returns the newly updated Setting object. UpdateAsync(Setting, CancellationToken) This method updates an existing Setting object in the store. Declaration Task<Setting> UpdateAsync(Setting model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Setting model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Setting > A task to perform the operation that returns the newly updated Setting object."
  },
  "api/CG.Olive.Stores.IUploadStore.html": {
    "href": "api/CG.Olive.Stores.IUploadStore.html",
    "title": "Interface IUploadStore",
    "keywords": "Interface IUploadStore This interface represents an object that manages the business logic for Upload objects. Inherited Members System.IDisposable.Dispose() Namespace : CG.Olive.Stores Assembly : CG.Olive.Abstractions.dll Syntax public interface IUploadStore : IStore, IDisposable Methods AddAsync(Upload, CancellationToken) This method adds a new Upload object to the store. Declaration Task<Upload> AddAsync(Upload model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Upload model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Upload > A task to perform the operation that returns the newly added Upload object. AsQueryable() This method returns an System.Linq.IQueryable<T> object for the collection of Upload objects maintained by this store. Declaration IQueryable<Upload> AsQueryable() Returns Type Description System.Linq.IQueryable < Upload > A System.Linq.IQueryable<T> object. DeleteAsync(Int32, CancellationToken) This method deletes an existing Upload object from the store. Declaration Task DeleteAsync(int id, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Int32 id The identifier for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task A task to perform the operation that returns the newly updated Upload object. UploadFromJsonStreamAsync(Stream, Application, Environment, String, String, CancellationToken) This method accepts a stream containing JSON text, an application and an optional environment, and uploads the information to the store. Declaration Task<Upload> UploadFromJsonStreamAsync(Stream incomingStream, Application application, Environment environment, string incomingFileName, string userEmail, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.IO.Stream incomingStream The JSON stream to read from. Application application The application to use for the operation. Environment environment The optional environment to use for the operation. System.String incomingFileName The name of the file used for the operation. System.String userEmail The user email to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Upload > A task to perform the operation, that returns the newly generated Upload object."
  },
  "api/CG.Olive.Stores.SettingStore.html": {
    "href": "api/CG.Olive.Stores.SettingStore.html",
    "title": "Class SettingStore",
    "keywords": "Class SettingStore This class is a default implementation of the ISettingStore interface. Inheritance System.Object CG.DisposableBase CG.Business.Stores.StoreBase SettingStore Implements ISettingStore CG.Business.Stores.IStore System.IDisposable Inherited Members CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.Stores Assembly : CG.Olive.dll Syntax public class SettingStore : StoreBase, ISettingStore, IStore, IDisposable Constructors SettingStore(ISettingRepository) This constructor creates a new instance of the SettingStore class. Declaration public SettingStore(ISettingRepository uploadRepository) Parameters Type Name Description ISettingRepository uploadRepository The upload repository to use with the store. Properties SettingRepository This model contains a reference to an upload repository. Declaration protected ISettingRepository SettingRepository { get; } Property Value Type Description ISettingRepository Methods AddAsync(Setting, CancellationToken) This method adds a new Setting object to the store. Declaration public virtual Task<Setting> AddAsync(Setting model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Setting model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Setting > A task to perform the operation that returns the newly added Setting object. ApplyUploadAsync(Upload, String, CancellationToken) This method parses through an upload and saves the results as settings. Declaration public virtual Task<long> ApplyUploadAsync(Upload upload, string userName, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Upload upload The upload to use for the operation. System.String userName The user name of the person performing the aciton. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < System.Int64 > A task to perform the operation that returns a count of the number of Setting objects created for the upload. AsQueryable() This method returns an System.Linq.IQueryable<T> object for the collection of Setting objects maintained by this store. Declaration public virtual IQueryable<Setting> AsQueryable() Returns Type Description System.Linq.IQueryable < Setting > A System.Linq.IQueryable<T> object. DeleteAsync(Int32, CancellationToken) This method deletes an existing Setting object from the store. Declaration public virtual Task DeleteAsync(int id, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Int32 id The identifier for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task A task to perform the operation that returns the newly updated Setting object. UpdateAsync(Setting, CancellationToken) This method updates an existing Setting object in the store. Declaration public virtual Task<Setting> UpdateAsync(Setting model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Setting model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Setting > A task to perform the operation that returns the newly updated Setting object. Implements ISettingStore CG.Business.Stores.IStore System.IDisposable"
  },
  "api/CG.Olive.Stores.UploadStore.html": {
    "href": "api/CG.Olive.Stores.UploadStore.html",
    "title": "Class UploadStore",
    "keywords": "Class UploadStore This class is a default implementation of the IUploadStore interface. Inheritance System.Object CG.DisposableBase CG.Business.Stores.StoreBase UploadStore Implements IUploadStore CG.Business.Stores.IStore System.IDisposable Inherited Members CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.Stores Assembly : CG.Olive.dll Syntax public class UploadStore : StoreBase, IUploadStore, IStore, IDisposable Constructors UploadStore(IUploadRepository) This constructor creates a new instance of the UploadStore class. Declaration public UploadStore(IUploadRepository uploadRepository) Parameters Type Name Description IUploadRepository uploadRepository The upload repository to use with the store. Properties UploadRepository This property contains a reference to an upload repository. Declaration protected IUploadRepository UploadRepository { get; } Property Value Type Description IUploadRepository Methods AddAsync(Upload, CancellationToken) This method adds a new Upload object to the store. Declaration public virtual Task<Upload> AddAsync(Upload model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Upload model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Upload > A task to perform the operation that returns the newly added Upload object. AsQueryable() This method returns an System.Linq.IQueryable<T> object for the collection of Upload objects maintained by this store. Declaration public virtual IQueryable<Upload> AsQueryable() Returns Type Description System.Linq.IQueryable < Upload > A System.Linq.IQueryable<T> object. DeleteAsync(Int32, CancellationToken) This method deletes an existing Upload object from the store. Declaration public virtual Task DeleteAsync(int id, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Int32 id The identifier for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task A task to perform the operation that returns the newly updated Upload object. UpdateAsync(Upload, CancellationToken) Declaration public virtual Task<Upload> UpdateAsync(Upload model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Upload model System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < Upload > UploadFromJsonStreamAsync(Stream, Application, Environment, String, String, CancellationToken) This method accepts a stream containing JSON text, an application and an optional environment, and uploads the information to the store. Declaration public virtual Task<Upload> UploadFromJsonStreamAsync(Stream incomingStream, Application application, Environment environment, string incomingFileName, string userName, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.IO.Stream incomingStream The JSON stream to read from. Application application The application to use for the operation. Environment environment The optional environment to use for the operation. System.String incomingFileName The name of the file used for the operation. System.String userName System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Upload > A task to perform the operation, that returns the newly generated Upload object. Implements IUploadStore CG.Business.Stores.IStore System.IDisposable"
  },
  "api/CG.Olive.Web.Controllers.ConfigurationController.html": {
    "href": "api/CG.Olive.Web.Controllers.ConfigurationController.html",
    "title": "Class ConfigurationController",
    "keywords": "Class ConfigurationController This class is a REST controller for configuration related operations. Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase ConfigurationController Inherited Members Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.NoContent() Microsoft.AspNetCore.Mvc.ControllerBase.Ok() Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction() Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized() Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.NotFound() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest() Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity() Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Conflict() Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Problem(System.String, System.String, System.Nullable<System.Int32>, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ValidationProblemDetails) Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem() Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(System.String, System.String, System.Nullable<System.Int32>, System.String, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted() Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge() Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid() Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut() Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext Microsoft.AspNetCore.Mvc.ControllerBase.Request Microsoft.AspNetCore.Mvc.ControllerBase.Response Microsoft.AspNetCore.Mvc.ControllerBase.RouteData Microsoft.AspNetCore.Mvc.ControllerBase.ModelState Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory Microsoft.AspNetCore.Mvc.ControllerBase.Url Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator Microsoft.AspNetCore.Mvc.ControllerBase.ProblemDetailsFactory Microsoft.AspNetCore.Mvc.ControllerBase.User System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.Web.Controllers Assembly : CG.Olive.Web.dll Syntax [Route(\"api/[controller]\")] [ApiController] public class ConfigurationController : ControllerBase Constructors ConfigurationController(IConfigurationStore) This constructor creates a new instance of the ConfigurationController class. Declaration public ConfigurationController(IConfigurationStore configurationStore) Parameters Type Name Description IConfigurationStore configurationStore The configuration store to use with the controller. Methods GetAsync(String, String, String) This method retrieves a configuration for the specified application and environment. Declaration [AllowAnonymous] [HttpGet(\"{sid}/{skey}/{environment?}\")] public virtual Task<IActionResult> GetAsync(string sid, string skey, string environment) Parameters Type Name Description System.String sid The application security identifier to use for the operation. System.String skey The application security key to use for the operation. System.String environment The optional environment name for the operation. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A task to perform the operation that returns a Microsoft.AspNetCore.Mvc.IActionResult instance, with the results of the operation."
  },
  "api/CG.Olive.Web.Controllers.html": {
    "href": "api/CG.Olive.Web.Controllers.html",
    "title": "Namespace CG.Olive.Web.Controllers",
    "keywords": "Namespace CG.Olive.Web.Controllers Classes ConfigurationController This class is a REST controller for configuration related operations."
  },
  "api/CG.Olive.Web.html": {
    "href": "api/CG.Olive.Web.html",
    "title": "Namespace CG.Olive.Web",
    "keywords": "Namespace CG.Olive.Web Classes Program This class contains the main program logic. Startup This class contains startup logic for the server."
  },
  "api/CG.Olive.Web.Models.html": {
    "href": "api/CG.Olive.Web.Models.html",
    "title": "Namespace CG.Olive.Web.Models",
    "keywords": "Namespace CG.Olive.Web.Models Classes PreUpload This class is a model that represents an unsaved upload."
  },
  "api/CG.Olive.Web.Models.PreUpload.html": {
    "href": "api/CG.Olive.Web.Models.PreUpload.html",
    "title": "Class PreUpload",
    "keywords": "Class PreUpload This class is a model that represents an unsaved upload. Inheritance System.Object PreUpload Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.Web.Models Assembly : CG.Olive.Web.dll Syntax public class PreUpload Properties Application This property contains an application for an upload. Declaration public Application Application { get; set; } Property Value Type Description Application Environment This property contains an environment for an upload. Declaration public Environment Environment { get; set; } Property Value Type Description Environment File This property contains information about a file to be uploaded. Declaration public IBrowserFile File { get; set; } Property Value Type Description Microsoft.AspNetCore.Components.Forms.IBrowserFile"
  },
  "api/CG.Olive.Web.Options.ApiAuthOptions.html": {
    "href": "api/CG.Olive.Web.Options.ApiAuthOptions.html",
    "title": "Class ApiAuthOptions",
    "keywords": "Class ApiAuthOptions This class contains configuration settings for authenticating the internal REST API. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase ApiAuthOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.Web.Options Assembly : CG.Olive.Web.dll Syntax public class ApiAuthOptions : OptionsBase, IValidatableObject Properties ApiName This property contains the name for an API. Declaration [Required] public string ApiName { get; set; } Property Value Type Description System.String ApiSecret This property contains a client secret for the API. Declaration [Required] public string ApiSecret { get; set; } Property Value Type Description System.String Authority This property contains a url to an identity authority. Declaration [Required] public string Authority { get; set; } Property Value Type Description System.String Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Olive.Web.Options.html": {
    "href": "api/CG.Olive.Web.Options.html",
    "title": "Namespace CG.Olive.Web.Options",
    "keywords": "Namespace CG.Olive.Web.Options Classes ApiAuthOptions This class contains configuration settings for authenticating the internal REST API. IdentityOptions This class represents configuration options for OIDC identity. OidcAuthOptions This class contains configuration settings for authenticating the website through OIDC."
  },
  "api/CG.Olive.Web.Options.IdentityOptions.html": {
    "href": "api/CG.Olive.Web.Options.IdentityOptions.html",
    "title": "Class IdentityOptions",
    "keywords": "Class IdentityOptions This class represents configuration options for OIDC identity. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase IdentityOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.Web.Options Assembly : CG.Olive.Web.dll Syntax public class IdentityOptions : OptionsBase, IValidatableObject Properties API This property contains configuration settings for authenticating the internal REST API. Declaration [Required] public ApiAuthOptions API { get; set; } Property Value Type Description ApiAuthOptions OIDC This property contains configuration settings for authenticating the website via OIDC. Declaration [Required] public OidcAuthOptions OIDC { get; set; } Property Value Type Description OidcAuthOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Olive.Web.Options.OidcAuthOptions.html": {
    "href": "api/CG.Olive.Web.Options.OidcAuthOptions.html",
    "title": "Class OidcAuthOptions",
    "keywords": "Class OidcAuthOptions This class contains configuration settings for authenticating the website through OIDC. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase OidcAuthOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.Web.Options Assembly : CG.Olive.Web.dll Syntax public class OidcAuthOptions : OptionsBase, IValidatableObject Properties Authority This property contains a url to an identity authority. Declaration [Required] public string Authority { get; set; } Property Value Type Description System.String ClientId This property contains a client identifier for the website. Declaration [Required] public string ClientId { get; set; } Property Value Type Description System.String ClientSecret This property contains a client secret for the website. Declaration [Required] public string ClientSecret { get; set; } Property Value Type Description System.String Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Olive.Web.Pages.Account.html": {
    "href": "api/CG.Olive.Web.Pages.Account.html",
    "title": "Namespace CG.Olive.Web.Pages.Account",
    "keywords": "Namespace CG.Olive.Web.Pages.Account Classes LoginModel This class is the code-behind for the Login page. LogoutModel This class is the code-behind for the Logout page."
  },
  "api/CG.Olive.Web.Pages.Account.LoginModel.html": {
    "href": "api/CG.Olive.Web.Pages.Account.LoginModel.html",
    "title": "Class LoginModel",
    "keywords": "Class LoginModel This class is the code-behind for the Login page. Inheritance System.Object Microsoft.AspNetCore.Mvc.RazorPages.PageModel LoginModel Implements Microsoft.AspNetCore.Mvc.Filters.IAsyncPageFilter Microsoft.AspNetCore.Mvc.Filters.IPageFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata Inherited Members Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.BadRequest() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.NotFound() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.NotFound(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Page() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Redirect(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Unauthorized() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Partial(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Partial(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerSelected(Microsoft.AspNetCore.Mvc.Filters.PageHandlerSelectedContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerExecuting(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutingContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerExecuted(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutedContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerSelectionAsync(Microsoft.AspNetCore.Mvc.Filters.PageHandlerSelectedContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutingContext, Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutionDelegate) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.PageContext Microsoft.AspNetCore.Mvc.RazorPages.PageModel.HttpContext Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Request Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Response Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RouteData Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ModelState Microsoft.AspNetCore.Mvc.RazorPages.PageModel.User Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TempData Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Url Microsoft.AspNetCore.Mvc.RazorPages.PageModel.MetadataProvider Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewData System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.Web.Pages.Account Assembly : CG.Olive.Web.dll Syntax public class LoginModel : PageModel, IAsyncPageFilter, IPageFilter, IFilterMetadata Methods OnGetAsync(String) This method is called whenever the page is sent a GET verb. Declaration public Task OnGetAsync(string redirectUri) Parameters Type Name Description System.String redirectUri The uri for a redirect. Returns Type Description System.Threading.Tasks.Task A task to perform the operation. Implements Microsoft.AspNetCore.Mvc.Filters.IAsyncPageFilter Microsoft.AspNetCore.Mvc.Filters.IPageFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"
  },
  "api/CG.Olive.Web.Pages.Account.LogoutModel.html": {
    "href": "api/CG.Olive.Web.Pages.Account.LogoutModel.html",
    "title": "Class LogoutModel",
    "keywords": "Class LogoutModel This class is the code-behind for the Logout page. Inheritance System.Object Microsoft.AspNetCore.Mvc.RazorPages.PageModel LogoutModel Implements Microsoft.AspNetCore.Mvc.Filters.IAsyncPageFilter Microsoft.AspNetCore.Mvc.Filters.IPageFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata Inherited Members Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.BadRequest() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.NotFound() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.NotFound(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Page() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Redirect(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Unauthorized() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Partial(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Partial(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerSelected(Microsoft.AspNetCore.Mvc.Filters.PageHandlerSelectedContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerExecuting(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutingContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerExecuted(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutedContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerSelectionAsync(Microsoft.AspNetCore.Mvc.Filters.PageHandlerSelectedContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutingContext, Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutionDelegate) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.PageContext Microsoft.AspNetCore.Mvc.RazorPages.PageModel.HttpContext Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Request Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Response Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RouteData Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ModelState Microsoft.AspNetCore.Mvc.RazorPages.PageModel.User Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TempData Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Url Microsoft.AspNetCore.Mvc.RazorPages.PageModel.MetadataProvider Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewData System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.Web.Pages.Account Assembly : CG.Olive.Web.dll Syntax public class LogoutModel : PageModel, IAsyncPageFilter, IPageFilter, IFilterMetadata Methods OnPostAsync() This method is called whenever the page is sent a POST verb. Declaration public Task<IActionResult> OnPostAsync() Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A task to perform the operation, that returns an Microsoft.AspNetCore.Mvc.IActionResult object. Implements Microsoft.AspNetCore.Mvc.Filters.IAsyncPageFilter Microsoft.AspNetCore.Mvc.Filters.IPageFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"
  },
  "api/CG.Olive.Web.Pages.Applications.EditDialog.html": {
    "href": "api/CG.Olive.Web.Pages.Applications.EditDialog.html",
    "title": "Class EditDialog",
    "keywords": "Class EditDialog This class is the code-behind for the EditDialog razor view. Inheritance System.Object EditDialog Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.Web.Pages.Applications Assembly : CG.Olive.Web.dll Syntax public class EditDialog Properties Caption This property contains a reference to the caption. Declaration [Parameter] public string Caption { get; set; } Property Value Type Description System.String Model This property contains a reference to the model. Declaration [Parameter] public Application Model { get; set; } Property Value Type Description Application"
  },
  "api/CG.Olive.Web.Pages.Applications.html": {
    "href": "api/CG.Olive.Web.Pages.Applications.html",
    "title": "Namespace CG.Olive.Web.Pages.Applications",
    "keywords": "Namespace CG.Olive.Web.Pages.Applications Classes EditDialog This class is the code-behind for the EditDialog razor view. Index This class is the code-behind for the Index razor view."
  },
  "api/CG.Olive.Web.Pages.Applications.Index.html": {
    "href": "api/CG.Olive.Web.Pages.Applications.Index.html",
    "title": "Class Index",
    "keywords": "Class Index This class is the code-behind for the Index razor view. Inheritance System.Object Index Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.Web.Pages.Applications Assembly : CG.Olive.Web.dll Syntax public class Index Methods OnInitializedAsync() This method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Declaration protected override Task OnInitializedAsync() Returns Type Description System.Threading.Tasks.Task A task to perform the operation."
  },
  "api/CG.Olive.Web.Pages.Configuration.html": {
    "href": "api/CG.Olive.Web.Pages.Configuration.html",
    "title": "Namespace CG.Olive.Web.Pages.Configuration",
    "keywords": "Namespace CG.Olive.Web.Pages.Configuration Classes Index This class is the code-behind for the Index razor view."
  },
  "api/CG.Olive.Web.Pages.Configuration.Index.html": {
    "href": "api/CG.Olive.Web.Pages.Configuration.Index.html",
    "title": "Class Index",
    "keywords": "Class Index This class is the code-behind for the Index razor view. Inheritance System.Object Index Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.Web.Pages.Configuration Assembly : CG.Olive.Web.dll Syntax public class Index"
  },
  "api/CG.Olive.Web.Pages.Environments.EditDialog.html": {
    "href": "api/CG.Olive.Web.Pages.Environments.EditDialog.html",
    "title": "Class EditDialog",
    "keywords": "Class EditDialog This class is the code-behind for the EditDialog razor view. Inheritance System.Object EditDialog Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.Web.Pages.Environments Assembly : CG.Olive.Web.dll Syntax public class EditDialog Properties Caption This property contains a reference to the caption. Declaration [Parameter] public string Caption { get; set; } Property Value Type Description System.String Model This property contains a reference to the model. Declaration [Parameter] public Environment Model { get; set; } Property Value Type Description Environment"
  },
  "api/CG.Olive.Web.Pages.Environments.html": {
    "href": "api/CG.Olive.Web.Pages.Environments.html",
    "title": "Namespace CG.Olive.Web.Pages.Environments",
    "keywords": "Namespace CG.Olive.Web.Pages.Environments Classes EditDialog This class is the code-behind for the EditDialog razor view. Index This class is the code-behind for the Index razor view."
  },
  "api/CG.Olive.Web.Pages.Environments.Index.html": {
    "href": "api/CG.Olive.Web.Pages.Environments.Index.html",
    "title": "Class Index",
    "keywords": "Class Index This class is the code-behind for the Index razor view. Inheritance System.Object Index Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.Web.Pages.Environments Assembly : CG.Olive.Web.dll Syntax public class Index Methods OnInitializedAsync() This method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Declaration protected override Task OnInitializedAsync() Returns Type Description System.Threading.Tasks.Task A task to perform the operation."
  },
  "api/CG.Olive.Web.Pages.ErrorModel.html": {
    "href": "api/CG.Olive.Web.Pages.ErrorModel.html",
    "title": "Class ErrorModel",
    "keywords": "Class ErrorModel This class is the code-behind for the Error page. Inheritance System.Object Microsoft.AspNetCore.Mvc.RazorPages.PageModel ErrorModel Implements Microsoft.AspNetCore.Mvc.Filters.IAsyncPageFilter Microsoft.AspNetCore.Mvc.Filters.IPageFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata Inherited Members Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.BadRequest() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.NotFound() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.NotFound(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Page() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Redirect(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Unauthorized() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Partial(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Partial(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerSelected(Microsoft.AspNetCore.Mvc.Filters.PageHandlerSelectedContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerExecuting(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutingContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerExecuted(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutedContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerSelectionAsync(Microsoft.AspNetCore.Mvc.Filters.PageHandlerSelectedContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutingContext, Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutionDelegate) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.PageContext Microsoft.AspNetCore.Mvc.RazorPages.PageModel.HttpContext Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Request Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Response Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RouteData Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ModelState Microsoft.AspNetCore.Mvc.RazorPages.PageModel.User Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TempData Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Url Microsoft.AspNetCore.Mvc.RazorPages.PageModel.MetadataProvider Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewData System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.Web.Pages Assembly : CG.Olive.Web.dll Syntax [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)] [IgnoreAntiforgeryToken] public class ErrorModel : PageModel, IAsyncPageFilter, IPageFilter, IFilterMetadata Properties RequestId This property contains a request identifier. Declaration public string RequestId { get; set; } Property Value Type Description System.String ShowRequestId This property indicates whether the request identifier is visible. Declaration public bool ShowRequestId { get; } Property Value Type Description System.Boolean Methods OnGet() This method is called whenever the page is sent a GET verb. Declaration public void OnGet() Implements Microsoft.AspNetCore.Mvc.Filters.IAsyncPageFilter Microsoft.AspNetCore.Mvc.Filters.IPageFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"
  },
  "api/CG.Olive.Web.Pages.html": {
    "href": "api/CG.Olive.Web.Pages.html",
    "title": "Namespace CG.Olive.Web.Pages",
    "keywords": "Namespace CG.Olive.Web.Pages Classes ErrorModel This class is the code-behind for the Error page. Index This class is the code-behind for the Index razor view."
  },
  "api/CG.Olive.Web.Pages.Index.html": {
    "href": "api/CG.Olive.Web.Pages.Index.html",
    "title": "Class Index",
    "keywords": "Class Index This class is the code-behind for the Index razor view. Inheritance System.Object Index Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.Web.Pages Assembly : CG.Olive.Web.dll Syntax public class Index"
  },
  "api/CG.Olive.Web.Pages.Settings.EditDialog.html": {
    "href": "api/CG.Olive.Web.Pages.Settings.EditDialog.html",
    "title": "Class EditDialog",
    "keywords": "Class EditDialog This class is the code-behind for the EditDialog razor view. Inheritance System.Object EditDialog Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.Web.Pages.Settings Assembly : CG.Olive.Web.dll Syntax public class EditDialog Properties Model This property contains a reference to the model. Declaration [Parameter] public Setting Model { get; set; } Property Value Type Description Setting"
  },
  "api/CG.Olive.Web.Pages.Settings.html": {
    "href": "api/CG.Olive.Web.Pages.Settings.html",
    "title": "Namespace CG.Olive.Web.Pages.Settings",
    "keywords": "Namespace CG.Olive.Web.Pages.Settings Classes EditDialog This class is the code-behind for the EditDialog razor view. Index This class is the code-behind for the Index razor view. PropertiesDialog This class is the code-behind for the PropertiesDialog razor view."
  },
  "api/CG.Olive.Web.Pages.Settings.Index.html": {
    "href": "api/CG.Olive.Web.Pages.Settings.Index.html",
    "title": "Class Index",
    "keywords": "Class Index This class is the code-behind for the Index razor view. Inheritance System.Object Index Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.Web.Pages.Settings Assembly : CG.Olive.Web.dll Syntax public class Index Methods OnInitializedAsync() This method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Declaration protected override Task OnInitializedAsync() Returns Type Description System.Threading.Tasks.Task A task to perform the operation."
  },
  "api/CG.Olive.Web.Pages.Settings.PropertiesDialog.html": {
    "href": "api/CG.Olive.Web.Pages.Settings.PropertiesDialog.html",
    "title": "Class PropertiesDialog",
    "keywords": "Class PropertiesDialog This class is the code-behind for the PropertiesDialog razor view. Inheritance System.Object PropertiesDialog Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.Web.Pages.Settings Assembly : CG.Olive.Web.dll Syntax public class PropertiesDialog Properties Model This property contains a reference to the model. Declaration [Parameter] public Setting Model { get; set; } Property Value Type Description Setting"
  },
  "api/CG.Olive.Web.Pages.Uploads.html": {
    "href": "api/CG.Olive.Web.Pages.Uploads.html",
    "title": "Namespace CG.Olive.Web.Pages.Uploads",
    "keywords": "Namespace CG.Olive.Web.Pages.Uploads Classes Index This class is the code-behind for the Index razor view."
  },
  "api/CG.Olive.Web.Pages.Uploads.Index.html": {
    "href": "api/CG.Olive.Web.Pages.Uploads.Index.html",
    "title": "Class Index",
    "keywords": "Class Index This class is the code-behind for the Index razor view. Inheritance System.Object Index Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.Web.Pages.Uploads Assembly : CG.Olive.Web.dll Syntax public class Index Methods OnInitializedAsync() This method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Declaration protected override Task OnInitializedAsync() Returns Type Description System.Threading.Tasks.Task A task to perform the operation."
  },
  "api/CG.Olive.Web.Program.html": {
    "href": "api/CG.Olive.Web.Program.html",
    "title": "Class Program",
    "keywords": "Class Program This class contains the main program logic. Inheritance System.Object Program Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.Web Assembly : CG.Olive.Web.dll Syntax public class Program Methods CreateHostBuilder(String[]) This method returns a host builder. Declaration public static IHostBuilder CreateHostBuilder(string[] args) Parameters Type Name Description System.String [] args Optional command line arguments Returns Type Description Microsoft.Extensions.Hosting.IHostBuilder An Microsoft.Extensions.Hosting.IHostBuilder instance. Main(String[]) This method is the main entry point for the process. Declaration public static void Main(string[] args) Parameters Type Name Description System.String [] args Optional command line arguments"
  },
  "api/CG.Olive.Web.Services.html": {
    "href": "api/CG.Olive.Web.Services.html",
    "title": "Namespace CG.Olive.Web.Services",
    "keywords": "Namespace CG.Olive.Web.Services Classes TokenProvider This class provides access to important HTTP related tokens. TokenService This class provides access to always refreshed HTTP related tokens. Interfaces ITokenService This interface represents an object that manages access tokens."
  },
  "api/CG.Olive.Web.Services.ITokenService.html": {
    "href": "api/CG.Olive.Web.Services.ITokenService.html",
    "title": "Interface ITokenService",
    "keywords": "Interface ITokenService This interface represents an object that manages access tokens. Namespace : CG.Olive.Web.Services Assembly : CG.Olive.Web.dll Syntax public interface ITokenService Methods EnsureAccessTokenAsync(CancellationToken) This method ensures the returned access token is always current. Declaration Task<string> EnsureAccessTokenAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < System.String > The refreshed HTTP access token."
  },
  "api/CG.Olive.Web.Services.TokenProvider.html": {
    "href": "api/CG.Olive.Web.Services.TokenProvider.html",
    "title": "Class TokenProvider",
    "keywords": "Class TokenProvider This class provides access to important HTTP related tokens. Inheritance System.Object TokenProvider Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.Web.Services Assembly : CG.Olive.Web.dll Syntax public class TokenProvider Properties AccessToken This property contains a bearer access token. Declaration public string AccessToken { get; set; } Property Value Type Description System.String ExpiresAt This property indicates how long until the access token expires. Declaration public DateTimeOffset ExpiresAt { get; set; } Property Value Type Description System.DateTimeOffset RefreshToken This property contains a refresh token. Declaration public string RefreshToken { get; set; } Property Value Type Description System.String XsrfToken This property contains a cross-reference forgery validation token. Declaration public string XsrfToken { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Olive.Web.Services.TokenService.html": {
    "href": "api/CG.Olive.Web.Services.TokenService.html",
    "title": "Class TokenService",
    "keywords": "Class TokenService This class provides access to always refreshed HTTP related tokens. Inheritance System.Object TokenService Implements ITokenService Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.Web.Services Assembly : CG.Olive.Web.dll Syntax public class TokenService : ITokenService Constructors TokenService(TokenProvider, IHttpClientFactory) This constructor creates a new instance of the TokenService class. Declaration public TokenService(TokenProvider tokenProvider, IHttpClientFactory httpClientFactory) Parameters Type Name Description TokenProvider tokenProvider The token provider to use with the service. System.Net.Http.IHttpClientFactory httpClientFactory The HTTP client factory to use with the service. Methods EnsureAccessTokenAsync(CancellationToken) This method ensures the returned access token is always current. Declaration public virtual Task<string> EnsureAccessTokenAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < System.String > The refreshed HTTP access token. Implements ITokenService"
  },
  "api/CG.Olive.Web.Shared.ErrorBlock.html": {
    "href": "api/CG.Olive.Web.Shared.ErrorBlock.html",
    "title": "Class ErrorBlock",
    "keywords": "Class ErrorBlock This class is the code-behind for the ErrorBlock component. Inheritance System.Object ErrorBlock Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.Web.Shared Assembly : CG.Olive.Web.dll Syntax public class ErrorBlock Properties Content This property contains the content for the block. Declaration [Parameter] public string Content { get; set; } Property Value Type Description System.String Dismissable This property determines whether the block can be dismissed. Declaration [Parameter] public bool Dismissable { get; set; } Property Value Type Description System.Boolean"
  },
  "api/CG.Olive.Web.Shared.HelpBlock.html": {
    "href": "api/CG.Olive.Web.Shared.HelpBlock.html",
    "title": "Class HelpBlock",
    "keywords": "Class HelpBlock This class is the code-behind for the HelpBlock component. Inheritance System.Object HelpBlock Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.Web.Shared Assembly : CG.Olive.Web.dll Syntax public class HelpBlock Properties ChildContent This property contains child content for the block. Declaration [Parameter] public RenderFragment ChildContent { get; set; } Property Value Type Description Microsoft.AspNetCore.Components.RenderFragment Content This property contains the content for the block. Declaration [Parameter] public string Content { get; set; } Property Value Type Description System.String Visible This property indicated whether or not the block is visible. Declaration [Parameter] public bool Visible { get; set; } Property Value Type Description System.Boolean"
  },
  "api/CG.Olive.Web.Shared.html": {
    "href": "api/CG.Olive.Web.Shared.html",
    "title": "Namespace CG.Olive.Web.Shared",
    "keywords": "Namespace CG.Olive.Web.Shared Classes ErrorBlock This class is the code-behind for the ErrorBlock component. HelpBlock This class is the code-behind for the HelpBlock component. InfoBlock This class is the code-behind for the InfoBlock component."
  },
  "api/CG.Olive.Web.Shared.InfoBlock.html": {
    "href": "api/CG.Olive.Web.Shared.InfoBlock.html",
    "title": "Class InfoBlock",
    "keywords": "Class InfoBlock This class is the code-behind for the InfoBlock component. Inheritance System.Object InfoBlock Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.Web.Shared Assembly : CG.Olive.Web.dll Syntax public class InfoBlock Properties Content This property contains the content for the block. Declaration [Parameter] public string Content { get; set; } Property Value Type Description System.String Dismissable This property determines whether the block can be dismissed. Declaration [Parameter] public bool Dismissable { get; set; } Property Value Type Description System.Boolean"
  },
  "api/CG.Olive.Web.Startup.html": {
    "href": "api/CG.Olive.Web.Startup.html",
    "title": "Class Startup",
    "keywords": "Class Startup This class contains startup logic for the server. Inheritance System.Object Startup Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Olive.Web Assembly : CG.Olive.Web.dll Syntax public class Startup Constructors Startup(IConfiguration) This constructor creates a new instance of the Startup class. Declaration public Startup(IConfiguration configuration) Parameters Type Name Description Microsoft.Extensions.Configuration.IConfiguration configuration The configuration to use for the operation. Properties Configuration This property contains the configuration for the server. Declaration public IConfiguration Configuration { get; } Property Value Type Description Microsoft.Extensions.Configuration.IConfiguration Methods Configure(IApplicationBuilder, IWebHostEnvironment) This method is called to configure the web application. Declaration public void Configure(IApplicationBuilder app, IWebHostEnvironment env) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder app The application builder to use for the operation. Microsoft.AspNetCore.Hosting.IWebHostEnvironment env The runtime environment to use for the operation. ConfigureServices(IServiceCollection) This method is called to configure services with the DI container. Declaration public void ConfigureServices(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services The service collection to use for the operation."
  },
  "api/Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.html": {
    "href": "api/Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.html",
    "title": "Class ApplicationBuilderExtensions",
    "keywords": "Class ApplicationBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.IApplicationBuilder type. Inheritance System.Object ApplicationBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Olive.SqlServer.dll Syntax public static class ApplicationBuilderExtensions Remarks This class contains only those extension methods that are related to the logic within the CG.Olive.SqlServer library itself. Methods UseSqlServerRepositories(IApplicationBuilder, String) This method wires up any startup logic required to support the repositories and underyling SQL Server for the CG.Olive library. Declaration public static IApplicationBuilder UseSqlServerRepositories(this IApplicationBuilder applicationBuilder, string configurationSection) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder applicationBuilder The application builder to use for the operation. System.String configurationSection The configuration section name that corresponds with the repositories. Returns Type Description Microsoft.AspNetCore.Builder.IApplicationBuilder The value of the applicationBuilder parameter, for chaining calls together."
  },
  "api/Microsoft.AspNetCore.Builder.html": {
    "href": "api/Microsoft.AspNetCore.Builder.html",
    "title": "Namespace Microsoft.AspNetCore.Builder",
    "keywords": "Namespace Microsoft.AspNetCore.Builder Classes ApplicationBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.IApplicationBuilder type."
  },
  "api/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection",
    "keywords": "Namespace Microsoft.Extensions.DependencyInjection Classes ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection type."
  },
  "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions",
    "keywords": "Class ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection type. Inheritance System.Object ServiceCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.DependencyInjection Assembly : CG.Olive.dll Syntax public static class ServiceCollectionExtensions Remarks This class contains only those extension methods that are related to logic that lives within the CG.Olive project. Look in other projects for extensions methods related to their logic - for instance, the extension methods for the CG.Olive.Web project are located in the CG.Olive.Web project, and the extension methods for the CG.Olive.SqlServer project are located in the CG.Olive.SqlServer project. Methods AddOliveStores(IServiceCollection, IConfiguration, ServiceLifetime) This method adds stores for the Olive library. Declaration public static IServiceCollection AddOliveStores(this IServiceCollection serviceCollection, IConfiguration configuration, ServiceLifetime serviceLifetime = ServiceLifetime.Scoped) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration to use for the operation. Microsoft.Extensions.DependencyInjection.ServiceLifetime serviceLifetime The service lifetime to use for the operation. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The value of the serviceCollection parameter, for chaining calls together."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.Olive is a micro-service for managing application configurations."
  }
}